spring:
  application:
    name: nexa-lineage-api
  
  # PostgreSQL Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/nexa_lineage
    username: postgres
    password: password
    driver-class-name: org.postgresql.Driver
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  # Flyway Configuration
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
  
  # Neo4j Configuration
  neo4j:
    uri: bolt://localhost:7687
    authentication:
      username: neo4j
      password: password
  
  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: nexa-lineage-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /api

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

# Logging Configuration
logging:
  level:
    com.nexadata.lineage: DEBUG
    org.springframework.data.neo4j: DEBUG
    org.springframework.kafka: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Application Configuration
nexa:
  lineage:
    kafka:
      topic: lineage.events
    graph:
      sync:
        enabled: true
        interval: 10000 